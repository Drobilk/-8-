# -*- coding: utf-8 -*-
"""Практически до 8 окат

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WiIGTULpMvY7dEl_RCvN4duVz-n5E-3M

Задание 1
"""

class First:
     color = "red"
     def out(self):
          print(self.color + "!")
obj1 = First()
obj2 = First()
print(obj1.color)
print(obj2.color)
obj1.out()
obj2.out()

"""Задание 2"""

class Second:
     color = "red"
     form = "circle"
     def changecolor(self, newcolor):
          self.color = newcolor
     def changeform(self,newform):
          self.form = newform

obj1 = Second()
obj2 = Second()

print(obj1.color, obj1.form)
print(obj2.color, obj2.form)

obj1.changecolor("green")
obj2.changecolor("blue")
obj2.changeform("oval")

print(obj1.color, obj1.form)
print(obj2.color, obj2.form)

"""Задание 2. Практическая работа 1"""

class Second:
     color = "red"
     form = "circle"
     size = "big"
     def changecolor(self, newcolor):
          self.color = newcolor
     def changeform(self,newform):
          self.form = newform
     def changesize(self, newsize):
          self.size = newsize

obj1 = Second()
obj2 = Second()
obj3 = Second()

print(obj1.color, obj1.form, obj1.size)
print(obj2.color, obj2.form, obj2.size)
print(obj3.color, obj3.form, obj3.size)

obj1.changecolor("green")
obj2.changecolor("blue")
obj2.changeform("oval")
obj1.changesize("small")
obj3.changecolor("pink")
obj3.changeform("oval")
obj3.changesize("small")

print(obj1.color, obj1.form, obj1.size)
print(obj2.color, obj2.form, obj2.size)
print(obj3.color, obj3.form, obj3.size)

"""Задание 2. Практическая работа 2"""

class Persic:
  color = "blu"
obj1 = Persic()
class Mandarin:
  color = "green"
  def changecolor(self, newcolor):
          self.color = newcolor
obj2 = Mandarin()
obj2.changecolor(obj1.color)
print(obj1.color)
print(obj2.color)

"""Задание 3"""

class YesInit:
    
  def __init__ (self,one,two):
     self.fname = one
     self.sname = two

obj1 = YesInit("Peter","Ok")
print(obj1.fname, obj1.sname)

class NoInit:

  def names(self,one,two):
     self.fname = one
     self.sname = two
obj1 = NoInit()
obj1.names("Peter","Ok")
print(obj1.fname, obj1.sname)

"""Задание 4."""

class YesInit:
    
  def __init__ (self,one = "noname",two = "nonametoo"):
     self.fname = one
     self.sname = two

obj1 = YesInit("Sasha","Tu")
obj2 = YesInit()
obj3 = YesInit("Spartak")
obj4 = YesInit(two="Harry")

print(obj1.fname, obj1.sname)
print(obj2.fname, obj2.sname)
print(obj3.fname, obj3.sname)
print(obj4.fname, obj4.sname)

"""Задание 5"""

class fruits:
    def __init__(self,w,n=0):
      self.what = w
      self.numbers = n
f1 = fruits("apple", 150)
f2 = fruits("pineapple")
print(f1.what, f1.numbers)
print(f2.what, f2.numbers)

class fruits:
    def __init__(self,w,n=0):
      self.what = w
      self.numbers = n
f1 = fruits(150, "apple")
f2 = fruits("pineapple")
print(f1.what, f1.numbers)
print(f2.what, f2.numbers)

"""Задание 6"""

class Building:
     def __init__(self,w,c,n=0): #создаю конструктор класса и 4 атрибута объекта
          self.what = w
          self.color = c
          self.numbers = n
          self.mwhere(n)

     def mwhere(self,n): #создаю метод с условием для переменной n
          if n <= 0: 
               self.where = "отсутсвуют"
          elif 0 < n < 100: 
               self.where = "малый склад"
          else:
               self.where = "основной склад"
     def plus(self,p): #еще один метод класса для увеличивания на какое-то число p
          self.numbers = self.numbers + p 
          self.mwhere(self.numbers)
     def minus(self,m): #еще один метод класса для уменьшения на какое-то число m
          self.numbers = self.numbers - m
          self.mwhere(self.numbers)
  
m1 = Building("доски", "белые",50).     #меняю исходные данные на новые
m2 = Building("доски", "коричневые",300)#меняю исходные данные на новые
m3 = Building("кирпичи", "белые")#меняю исходные данные на новые

print(m1.what,m1.color,m1.where) #вывод 
print(m2.what,m2.color,m2.where)
print(m3.what,m3.color,m3.where)

m1.plus(500) #с помощью метода увеличиваю число m1
print(m1.numbers, m1.where) #вывод

"""задание 6.ПР2"""

class supermarket:
     def __init__(self,w,c,n=0):
          self.what = w
          self.color = c
          self.numbers = n
          self.mwhere(n)

     def mwhere(self,n):
          if n <= 0:
               self.where = "отсутсвуют"
          elif 0 < n < 100:
               self.where = "малый склад"
          else:
               self.where = "основной склад"
     def plus(self,p):
          self.numbers = self.numbers + p 
          self.mwhere(self.numbers)
     def minus(self,m):
          self.numbers = self.numbers - m
          self.mwhere(self.numbers)
  
mango = supermarket("манго", "оранжевое",30)
apple = supermarket("яблоко", "зеленое",200)
banana = supermarket("банан", "желтый")

print(mango.what,mango.color,mango.where)
print(apple.what,apple.color,apple.where)
print(banana.what,banana.color,banana.where)

"""Задание 7"""

class Things:
     def __init__(self,n,t):
          self.namething = n
          self.total = t

th1 = Things("table", 5)
th2 = Things("computer", 7)

print(th1.namething,th1.total)
print(th2.namething,th2.total)

th1.color = "green"
th2.color = "blu"
print(th1.color)
print(th2.color)

"""Задание 8"""

class Table:
     def __init__(self,l,w,h):
          self.long = l
          self.width = w
          self.height = h 
     def outing(self):
          print(self.long,self.width,self.height)
class Kitchen(Table):
     def howplaces(self,n):
          if n < 2:
               print("It is not kitchen table")
          else:
               self.place = n
     def outplaces(self):
          print(self.place)  
t_room1 = Kitchen(2,1,0.5)
t_room1.outing()
t_room1.howplaces(5)
t_room1.outplaces()

t_2 = Table(1,3,0.7)
t_2.outing()

class Worker(Table):
     def __init__(self,m):
         self.materials=m
     def square(self,l,w):
         self.square=1*w
         print(self.square) 

Vova = Worker("дебил")
Vova.square(5,7)
print(Vova.materials)

"""Задание 8.Практическая"""

class figure:
  color = "white"
  def changecolor(self, newcolor):
          self.color = newcolor
class oval(figure):
  def __init__(self,p,r):
          self.ogip = p
          self.radious = r
class square(figure):
  def __init__(self,a):
          self.side = a
obj1 = figure()
obj1.changecolor("grey")
obj2 = oval(3.14,30)
obj3 = square(200)
print(obj1.color)
print(obj2.color,obj2.ogip,obj2.radious) 
print(obj3.color,obj3.side)